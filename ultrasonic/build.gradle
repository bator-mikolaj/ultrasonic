apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'jacoco-android'
apply from: "../gradle_scripts/code_quality.gradle"

android {
    compileSdkVersion versions.compileSdk

    defaultConfig {
        applicationId "org.moire.ultrasonic"
        versionCode 70
        versionName "2.6.1"

        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk

        resConfigs "en", "es", "fr", "pl","hu", "pt", "pt-rBR"
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'),
                    'minify/proguard-main.pro',
                    'minify/proguard-okhttp.pro',
                    'minify/proguard-retrofit.pro',
                    'minify/proguard-jackson.pro',
                    'minify/proguard-kotlin-reflect.pro',
                    'minify/proguard-kotlin.pro'
        }
        debug {
            minifyEnabled false
            testCoverageEnabled true
            applicationIdSuffix ".debug"
        }
    }
    sourceSets {
        main.java.srcDirs += "${projectDir}/src/main/kotlin"
        test.java.srcDirs += "${projectDir}/src/test/kotlin"
    }

    packagingOptions {
        exclude 'META-INF/LICENSE'
    }

    lintOptions {
        baselineFile file("lint-baseline.xml")
        abortOnError true
    }
}

dependencies {
    implementation project(':menudrawer')
    implementation project(':pulltorefresh')
    implementation project(':library')
    implementation project(':domain')
    implementation project(':subsonic-api')
    implementation project(':subsonic-api-image-loader')
    implementation project(':cache')

    implementation androidSupport.support
    implementation androidSupport.design

    implementation other.kotlinStdlib
    implementation other.koinAndroid

    testImplementation other.kotlinReflect
    testImplementation testing.junit
    testImplementation testing.kotlinJunit
    testImplementation testing.mockitoKotlin
    testImplementation testing.kluent
}

// Excluding all java classes and stuff that should not be covered
ext {
    jacocoExclude = [
            '**/activity/**',
            '**/audiofx/**',
            '**/fragment/**',
            '**/provider/**',
            '**/receiver/**',
            '**/service/**',
            '**/Test/**',
            '**/util/**',
            '**/view/**',
            '**/R$*.class',
            '**/R.class',
            '**/BuildConfig.class',
            '**/di/**'
    ]
}
jacocoAndroidUnitTestReport {
    excludes += jacocoExclude
}

afterEvaluate {
    testDebugUnitTest.finalizedBy jacocoTestDebugUnitTestReport
}
